---- START: UPLOAD LOGSEQ EXPORTS FEATURE
--
-- PSEUDO CODE
--
-- Create export table with jsonb column
-- Create page table with fields to populate
-- Create function to populate page data
-- Create trigger to run function
-- Run trigger before export json upsert
--
-- IMPLEMENTATION
--
-- Create table to store Logseq exports
create table export (
	id bigint generated by default as identity primary key,
	inserted_at timestamp with time zone default timezone('utc'::text, now()) not null,
	name varchar(255) not null,
	type varchar(255) not null,
	size bigint not null,
	last_modified bigint not null,
	data jsonb not null
);

-- Create table to extract export page blocks
create table page (
	id uuid primary key,
	"page-name" text,
	properties jsonb,
	format text,
	children jsonb
);

-- Define trigger function to populate page table
create or replace function extract_page_records ()
	returns trigger
	language plpgsql
	as $$
begin
	insert into page
	select
		*
	from
		jsonb_populate_recordset(null::page, new.data::jsonb -> 'blocks')
	on conflict (id)
		do update set
			"page-name" = excluded. "page-name",
			properties = excluded.properties,
			format = excluded.format,
			children = excluded.children;
	return new;
end
$$;

create trigger extract_page_records
	before insert on export for each row
	execute procedure extract_page_records ();

---- END: UPLOAD LOGSEQ EXPORTS FEATURE
