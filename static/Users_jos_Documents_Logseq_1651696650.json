{"version":1,"blocks":[{"id":"50b2d115-ef02-4882-ae87-a8b3cd441c44","page-name":"Contents","children":[{"id":"6270b7dc-4b18-4893-9332-439b9a14f318","format":"markdown","children":[],"content":""}]},{"id":"6270b7dc-6156-4914-b068-c6860437de2a","page-name":"May 3rd, 2022","format":"markdown","children":[{"id":"6270b7dc-700c-40da-b79e-7312c71e9d50","properties":{},"format":"markdown","children":[],"content":""}]},{"id":"6270b825-d548-40f2-a1bd-14c349cdc67f","page-name":"Cloudflare","properties":{"public":true},"format":"markdown","children":[{"id":"f0c5a373-1b7c-4009-aa74-c64789aa1144","properties":{"public":true},"format":"markdown","children":[],"content":"public:: true"},{"id":"6270b825-c84f-4c68-a423-b6de62e29fea","properties":{},"format":"markdown","children":[],"content":"Pages integration with [[SvelteKit]] documented in advance of potential meeting with Customer Success"},{"id":"6270b853-33ba-4acc-b3fc-79fb3a38a95c","properties":{},"format":"markdown","children":[],"content":"Wrangler2 in beta but no examples provided (adds confusion having 2 as well)"},{"id":"6270b856-8712-48d6-94f1-9c349be5d78f","properties":{},"format":"markdown","children":[],"content":"Unclear how to use PNPM for deployments (NPM/Yarn will fry a dev machine)"},{"id":"6270b859-cad6-4937-82de-c6cb6e7ef6b0","properties":{},"format":"markdown","children":[],"content":"SvelteKit adapter auto even Luke doesn't understand (ref: YouTube video)"},{"id":"6270b85a-6f2d-44c6-9653-a96494ca2772","properties":{},"format":"markdown","children":[],"content":"Platform stuff doesn't appear in SvelteKit as expected (reference SK issue)"},{"id":"6270b85b-14f2-4f0e-88e4-ca2e4aeaf4ec","properties":{},"format":"markdown","children":[],"content":"Node version not selected automatically for SvelteKit via Pages"},{"id":"6270b85c-9183-4834-bed2-ceaf1737d5f8","properties":{},"format":"markdown","children":[],"content":"Defaults to Node 12 which causes an immediate fail as SK is node >= 14.13"},{"id":"6270b860-a5bb-446a-95dc-cdf21bf044f3","properties":{},"format":"markdown","children":[],"content":"SvelteKit framework preset in Pages doesn't seem to do anything at all"},{"id":"6270b861-c39b-4b76-b9f1-83a153d2adc8","properties":{},"format":"markdown","children":[],"content":"Node is not available (for architectural reasons I understand) but it's not clear how"},{"id":"6270b862-f771-429e-8268-a3ffdadb3ede","properties":{},"format":"markdown","children":[],"content":"SvelteKit users are supposed to hide secrets — relates to needing an example for Wrangler 2 and the [confusion documented](https://github.com/sveltejs/kit/issues/2966) in the SvelteKit source repository"},{"id":"6270be98-6d26-499d-923f-867e72ba977c","properties":{},"format":"markdown","children":[],"content":"Finally got a successful deployment with a basic starter kit and the first thing I saw when I opened the site was:"},{"id":"6270beb5-a008-40da-8571-8ffde814ca0d","properties":{},"format":"markdown","children":[],"content":"![Screen Shot 2022-05-03 at 1.32.44 PM.png](../assets/Screen_Shot_2022-05-03_at_1.32.44_PM_1651556058620_0.png)"},{"id":"627211ac-e2ac-48d1-8e89-0de5b8241756","properties":{},"format":"markdown","children":[{"id":"627211e8-e16d-4c68-8a69-bc8b819ce30a","properties":{},"format":"markdown","children":[],"content":"Learnings were no server-side calls can be made in `_layout` to Supbabase free tier using GraphQL or REST for the purposes of feature-testing or server-driven site configuration on the Cloudflare Pages (Functions) free tier."}],"content":"Without visibility into logs I had to shoot in the dark to determine what the issue was which required dev time from Isaac on Discord and generally felt unproductive despite learnings."},{"id":"6272122e-4ffb-42d5-8914-541a8d3ac917","properties":{},"format":"markdown","children":[],"content":"Also, about Wrangler 2..."}]},{"id":"6270b88b-c22c-41e1-9f3b-307eb9d862cc","page-name":"SvelteKit","format":"markdown","children":[{"id":"6270b88b-d54e-487a-8eeb-feade7d89d18","properties":{},"format":"markdown","children":[],"content":"The web dev framework that will overtake React and Vue in 2022-2024"},{"id":"6270b8cb-1d6d-43e6-88cc-9b3fe9b8ced6","properties":{},"format":"markdown","children":[],"content":"Provides faster iteration, less boilerplate, faster pages and happier developers"},{"id":"6270b8e0-ca7f-4be6-8066-e9d32b216724","properties":{},"format":"markdown","children":[],"content":"Well-supported in the community with Rich Harris behind the helm at Vercel"},{"id":"6270b984-a02a-4704-8dab-de66984379a8","properties":{},"format":"markdown","children":[],"content":"Deploys to Netlify, [[Cloudflare]] and Vercel with ease"}]},{"id":"6272dc40-a1cd-4f7f-a91f-fa973a87e9ec","page-name":"Activate and Use Supabase GraphQL","properties":{"public":true},"format":"markdown","children":[{"id":"ddb93b1f-7387-4731-b3bb-6964cb1ef699","properties":{"public":true},"format":"markdown","children":[],"content":"public:: true"},{"id":"6272dc40-69f5-4da7-b022-d630d86611d8","properties":{},"format":"markdown","children":[],"content":"For the uninitiated [Supabase](https://supabase.com/) is a open source Firebase alternative. That’s a rather bold statement and it [has caused some](https://www.youtube.com/watch?v=WiwfiVdfRIc) long-time fans of Firebase, a Google product, to raise an eyebrow. Yet despite who’s talking about it or not one thing is for certain: Supabase is moving quick."},{"id":"6272dc9c-4ff0-4951-80cd-16f020ffd0f9","properties":{},"format":"markdown","children":[],"content":"[As of March 28th](https://supabase.com/blog/2022/03/29/graphql-now-available) all new projects created within Supabase have access to GraphQL via an extension for Postgres. And projects that were created beforehand can install the extension themselves if desired. This includes free-tier clients of Supabase.com, the company building a brand around this open source tech."},{"id":"6272dc91-7a43-4bd2-b61f-c9e7b7cf0623","properties":{},"format":"markdown","children":[],"content":"To activate GraphQL simply enable the pg_graphql extension as described in the announcement post linked above and run the following SQL query in the SQL Editor on the Supabase site to automatically build a Schema based off your database:\n```sql\n-- Rebuild the GraphQL Schema Cache\nselect graphql.rebuild_schema();\n```"},{"id":"6272dda2-89d1-4ea7-a0a4-92c7c5895171","properties":{},"format":"markdown","children":[],"content":"Once completed you can immediately start using the [GraphQL Playground](https://github.com/graphql/graphql-playground) to view the generated schema, schema documentation and to begin running GraphQL queries against your Supabase data as shown here:\n![screenshot](https://vhs.codeberg.page/post/activate-use-supabase-graphql/images/supagraphql-fs8.png \"GraphQL Playground Electron App showing GraphQL query results from Supabase.\"){:height 405, :width 642}"},{"id":"6272def4-15db-4c31-8ec9-860b4c2b1491","properties":{},"format":"markdown","children":[],"content":"You will need to provide an `apiKey` with sufficient privileges in order to execute GQL queries and the way to do that with the GraphQL Playground isn’t super intuitive so here are the steps spelled out:"},{"id":"6272df21-f45d-457c-9399-b2ac5c885922","properties":{},"format":"markdown","children":[],"content":"1. Click HTTP HEADERS near the bottom of the window.\n2. Enter the key like `{ \"apiKey\": \"yourreallylongapikeyhere\" }`.\n3. Click Reload Schema icon near the project URL."},{"id":"6272dfdb-5f96-441e-ab3b-81024afa1acf","properties":{},"format":"markdown","children":[],"content":"To verify it’s working click Docs to view the documentation. If you do not see the expected docs, double-check your `apiKey` and try again. Once you’re able to see the Docs you can move on to a practical example."},{"id":"6272e030-d690-4e0b-a1a4-ef3f55310e9a","properties":{},"heading-level":2,"format":"markdown","children":[],"content":"## Practical Example"},{"id":"6272e066-8e53-4108-b8fe-995f260a31a4","properties":{},"format":"markdown","children":[],"content":"In this example we’ll be creating a table for demonstration purposes then dropping it when we’re done. Before you continue ensure the table name used is unique to your database, or create a new Supabase project for testing purposes before you continue (safest approach). If you do not, you may risk of modifying data you did not intend to."},{"id":"6272e0de-9e06-4e28-811e-29680ca6f652","properties":{},"format":"markdown","children":[],"content":"Create a table called `navigation` in your database using the SQL Editor within Supabase and populate it with a few entities using the SQL below:\n```sql\n-- Create a table for Navigation Items\ncreate table navigation (\n  name varchar(35) not null unique check (char_length(name) > 0),\n  href varchar(255) not null unique,\n  weight smallint not null,\n  primary key (name, href)\n);\n\n-- Populate Navigation Items\ninsert into navigation (name, href, weight)\n  values ('Dashboard', '/dashboard', 1);\n\ninsert into navigation (name, href, weight)\nvalues ('Team', '/team', 2);\n\ninsert into navigation (name, href, weight)\nvalues ('Projects', '/projects', 3);\n\ninsert into navigation (name, href, weight)\nvalues ('Calendar', '/calendar', 4);\n```"},{"id":"6272e1ad-7ae8-48da-a057-7f28b8ea9b0f","properties":{},"format":"markdown","children":[],"content":"Once the table is created and populated, rebuild the graphql schema:\n```sql\n-- Rebuild the GraphQL Schema Cache\nselect graphql.rebuild_schema();\n```"},{"id":"6272e1d0-3685-4e2b-8a89-cbc39c478434","properties":{},"format":"markdown","children":[{"id":"fd5a0dec-5b93-41bb-85f2-17507d5d25bc","properties":{},"format":"markdown","children":[],"content":"A query called `navigationCollection` with a description"},{"id":"6272e1f0-ad3c-4f05-bea3-e8233fc8788a","properties":{},"format":"markdown","children":[],"content":"The description is a pageable collection of type `navigation`"}],"content":"Then in the GraphQL Playground click Reload Schema and check the Docs again. You should now see docs for the navigation table created above:"},{"id":"6272e1f5-08d6-46e1-8ad3-5c59036718dc","properties":{},"format":"markdown","children":[],"content":"If you’re familiar with [GraphQL naming conventions](https://docs.devland.is/technical-overview/api-design-guide/graphql-naming-conventions) you might have noticed the type generated called navigation is not correct. According to convention, type names should be PascalCase. Let’s remedy that by configuring `pg_graphql` to [use inflection](https://supabase.github.io/pg_graphql/configuration/#inflection) when building the schema."},{"id":"c5a47efe-68dc-46a8-8563-204ce598e0be","properties":{},"format":"markdown","children":[],"content":"To do so run the following in the SQL Editor:\n```sql\n-- Configure GraphQL name inflection\ncomment on schema public is e'@graphql({\"inflect_names\": true})';\n```"},{"id":"6272e28e-3f7c-43a0-a980-8adfe592aa46","properties":{},"format":"markdown","children":[],"content":"Afterwards rebuild your GraphQL schema:\n```sql\n-- Rebuild the GraphQL Schema Cache\nselect graphql.rebuild_schema();\n```"},{"id":"6272e299-5cd8-4d43-b272-64aa2d01e73b","properties":{},"format":"markdown","children":[{"id":"a441ac12-b71c-4e86-a9bb-8d78f823a438","properties":{},"format":"markdown","children":[],"content":"A query called `navigationCollection` with a description"},{"id":"6272e2ba-c59b-4e37-abff-b4943dc6d947","properties":{},"format":"markdown","children":[],"content":"The description is a pageable collection of type `Navigation`"}],"content":"Then in the GraphQL Playground click Reload Schema and check the Docs again. You should now see docs for the table with a PascalCased type name:"},{"id":"6272e2be-6b41-4e12-b476-b5abd7fca5ce","properties":{},"format":"markdown","children":[],"content":"For field names such as name a href a similar rule applies only instead of becoming PascalCase they will become camelCase [as described](https://supabase.github.io/pg_graphql/configuration/) in the docs along with more advanced settings using a similar approach."},{"id":"ebf9d0f9-211a-485e-acbc-3bbc416df54b","properties":{},"format":"markdown","children":[],"content":"To disable inflection set <samp>inflect_names</samp> to `false` in the SQL statement above then rerun the last two queries. And when you’re finished you can delete the navigation table with the following SQL statement again using the editor:\n```sql\n-- Delete table for Navigation Items\ndrop table if exists navigation;\n```"},{"id":"6272e32d-b192-4e78-8219-76ee449d47c3","properties":{},"format":"markdown","children":[],"content":"And, finally, rebuild your GraphQL schema if desired or consider disabling the `pg_graphql` extension if you no longer wish to use it."},{"id":"6272e33a-5164-4ca9-a8d3-182b5b6630e3","properties":{},"heading-level":2,"format":"markdown","children":[],"content":"## Summary"},{"id":"6272e345-084e-42fb-ae29-9c7ee0a1cdcb","properties":{},"format":"markdown","children":[],"content":"I haven’t tested this yet using the [Supabase Helm chart](https://github.com/supabase-community/supabase-kubernetes) or even verified the functionality is there. But if it is that means this works for self-hosted Supabase running on Kubernetes before the feature has even moved out of beta."},{"id":"d95ee387-721f-4931-b53d-c659d5196712","properties":{},"format":"markdown","children":[],"content":"Overall I’m very excited to see this as I’ve been looking for ways to improve the developer experience for users of my [Svelte Headless UI Starter](https://vhs.codeberg.page/code/svelte-headlessui-starter/) and Supabase with GraphQL will no doubt be a big win."},{"id":"919a57b9-7982-4392-bc67-93c29e819ea1","properties":{},"format":"markdown","children":[],"content":"Those are the basics of activating and using GraphQL with Supabase. Simple and elegant. Consult the original [Supabase GraphQL announcement](https://supabase.com/blog/2022/03/29/graphql-now-available) and related docs to learn more about using this feature."}]}]}